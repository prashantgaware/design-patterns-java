Object cloning:
    - Object cloning is a way to create exact copy of an object.
    - It is achieved by implementing Cloneable interface.
    - It is a shallow copy.
    - It is a bit faster than creating a new object using new keyword.
    - It is a bit risky because it involves typecasting.
    - It is not recommended to use clone() method to create a new object.
    4 types of cloning:
        1. Shallow cloning
        2. Deep cloning
        3. Copy constructor
        4. Serialization
    - Initially cloned object is exactly same as original object. But if we change the cloned object, original object will not be affected.
    - If we change the original object, cloned object will not be affected.

    - When object is created using as cloning, constructor is not called.
    - but when we create object using new keyword, constructor is called.
    - Generally developers dont directly use Cloneable interface. They use copy constructor or serialization.

    - The clone() is proteted method in Object class. So, we need to override it in our class.
    - If we dont override clone() method in our class, then we will get CloneNotSupportedException.


Reflection API:
    - Reflection API is used to inspect or modify runtime behavior of applications.
    - It is used to inspect classes, interfaces, fields, methods at runtime.
    - It is used to instantiate classes, invoke methods, get/set field values at runtime.
    - It is used to create dynamic proxy, get annotations, get super class, get interfaces,
      get package, get constructors, get methods, get fields, get modifiers, get annotations